(function(){"use strict";self.importScripts("/wasm_exec.js"),WebAssembly.instantiateStreaming||(WebAssembly.instantiateStreaming=async(e,r)=>{const t=await(await e).arrayBuffer();return await WebAssembly.instantiate(t,r)});function s(e){const r=new Go;WebAssembly.instantiateStreaming(fetch(e.wasm),r.importObject).then(t=>{r.run(t.instance),console.log("aggregator loaded okay"),postMessage({type:"ready"})}).catch(t=>{console.error(t),postMessage({type:"failed",reason:t instanceof Error?t.message:"Unknown Error"})})}function n(e){const r=JSON.parse(initializeAggregator(e.cfg));return r.error?{type:"failed",reason:r.error}:{type:"initialized",result:r}}function a(e){const r=aggregate(e.result);return r!=null?{type:"failed",reason:JSON.parse(r).error}:{type:"done"}}function o(){const e=JSON.parse(flush());return e.error?{type:"failed",reason:e.error}:{type:"result",result:e}}function i(e){switch(e.type){case"ready":return s(e);case"initialize":return postMessage(n(e));case"add":return postMessage(a(e));case"flush":return postMessage(o());default:throw console.error("aggregator - unknown request: ",e),new Error("aggregator unknown request")}}onmessage=e=>i(e.data)})();
